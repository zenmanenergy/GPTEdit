openapi: 3.0.0
info:
  title: File Management API
  version: 1.0.0
servers:
  - url: 'https://jahmgjderk.execute-api.us-east-1.amazonaws.com/default/GPTEdit'

paths:
  /editFile:
    post:
      summary: Edit a file's content.
      operationId: editFile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
                  description: Path to the file to be edited.
                text:
                  type: string
                  description: New text content to write to the file.
              required:
                - file_path
                - text
      responses:
        '200':
          description: File edited successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request parameters.

  /createFolder:
    post:
      summary: Create a new folder.
      operationId: createFolder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                folder_path:
                  type: string
                  description: Path to the folder to be created within the app directory.
              required:
                - folder_path
      responses:
        '200':
          description: Folder created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: No folder path provided or invalid request parameters.
        '500':
          description: Server error occurred while creating the folder.

  /rename:
    post:
      summary: Rename a file or folder.
      operationId: rename
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_path:
                  type: string
                  description: Current path of the file or folder.
                new_name:
                  type: string
                  description: New name for the file or folder.
              required:
                - old_path
                - new_name
      responses:
        '200':
          description: File or folder renamed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Missing or invalid parameters.
        '404':
          description: File or folder not found.

  /deleteFile:
    get:
      summary: Delete a specific file.
      operationId: deleteFile
      parameters:
        - in: query
          name: file_path
          schema:
            type: string
          required: true
          description: Path of the file to delete.
      responses:
        '200':
          description: File deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: File not found.

  /deleteFolder:
    get:
      summary: Delete a specific folder and its contents.
      operationId: deleteFolder
      parameters:
        - in: query
          name: folder_path
          schema:
            type: string
          required: true
          description: Path of the folder to delete.
      responses:
        '200':
          description: Folder deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Folder not found.

  /listFiles:
    get:
      summary: List all files and folders in the directory.
      operationId: listFiles
      responses:
        '200':
          description: List of all files and folders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: string
                  folders:
                    type: array
                    items:
                      type: string

  /getFilesInFolder:
    get:
      summary: List files in a specified folder.
      operationId: getFilesInFolder
      parameters:
        - in: query
          name: folder_path
          schema:
            type: string
          required: true
          description: Path of the folder to list files from.
      responses:
        '200':
          description: List of files in the specified folder.
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: string
        '404':
          description: Folder not found.

  /getSingleFile:
    get:
      summary: Retrieve content of a single file.
      operationId: getSingleFile
      parameters:
        - in: query
          name: file_path
          schema:
            type: string
          required: true
          description: Path of the file to retrieve.
      responses:
        '200':
          description: File content retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_path:
                    type: string
                  content:
                    type: string
        '404':
          description: File not found.
